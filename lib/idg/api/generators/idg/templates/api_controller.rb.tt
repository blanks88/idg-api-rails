<% if namespaced? -%>
require_dependency "<%= namespaced_path %>/application_controller"
<% end -%>
    <% module_namespacing do -%>
class <%= controller_class_name %>Controller < ApplicationController
  include V1::Listable

  # GET <%= route_url %>
  def index
    <%= controller_class_name %>::QueryService
        .new(params)
        .execute do |query|
      render :json => query, status: :ok
    end
  end

  # GET <%= route_url %>/:id
  def show
    render json: <%= "@#{singular_table_name}" %>
  end

  # POST <%= route_url %>
  def create
    <%= controller_class_name %>::InsertService
        .new(subject_params).execute do |result|
      if result.errors.present?
        render json: result.errors, status: :unprocessable_entity
      else
        render json: result, status: :created
      end
    end
  end

  # PATCH/PUT <%= route_url %>/:id
  def update
    <%= controller_class_name %>::UpdateService
        .new(params[:id], subject_params).execute do |result|
      if result.errors.present?
        render json: result.errors, status: :unprocessable_entity
      else
        render json: result
      end
    end
  end

  # DELETE <%= route_url %>/:id
  def destroy
    <%= controller_class_name %>::DeleteService
        .new(working_tenant, params[:id]).execute do |result|
      if result.errors.present?
        render json: result.errors, status: :unprocessable_entity
      else
        head :ok
      end
    end
  end

  # GET <%= route_url %>/count
  def count
    <%= controller_class_name %>::QueryService
        .new(working_tenant, params)
        .execute do |query|
      render :json => query.count, status: :ok
    end
  end


  # GET <%= route_url %>/filters
  def filters
    V1::Sal::Documents::FiltersGeneratorService
        .new(@credential, @tenant, params)
        .execute do |query|
      render :json => query.to_json, status: :ok
    end
  end


  private
  # Only allow a list of trusted parameters through.
  def subject_params
      <%- if attributes_names.empty? -%>
    params.fetch(:<%= singular_table_name %>, {})
        <%- else -%>
    params.require(:<%= singular_table_name %>).permit(<%= permitted_params %>)
      <%- end -%>
  end
end
    <% end -%>
